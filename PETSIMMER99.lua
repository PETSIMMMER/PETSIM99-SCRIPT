--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v88=0;local v89;while true do if (v88==0) then v89=v2(v0(v30,16));if v19 then local v129=v5(v89,v19);v19=nil;return v129;else return v89;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v90=(v31/((1 + 1)^(v32-(2 -1))))%((5 -3)^(((v33-(878 -(282 + 595))) -(v32-(1 -0))) + (2 -1))) ;return v90-(v90%(1638 -(1523 + 114))) ;else local v91=619 -(555 + 64) ;local v92;while true do if (v91==(931 -(857 + 74))) then v92=(1067 -(68 + (4341 -3344)))^(v32-(1271 -((343 -(32 + 85)) + 1044))) ;return (((v31%(v92 + v92))>=v92) and (569 -(367 + 201))) or ((909 + 18) -(48 + 166 + 713)) ;end end end end local function v21() local v34=957 -((1072 -(67 + 113)) + 65) ;local v35;while true do if ((2 -1)==v34) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (1 -0) ;v34=351 -(87 + 263) ;end end end local function v22() local v36=0 + 0 ;local v37;local v38;while true do if (v36==(1 -0)) then return (v38 * (628 -372)) + v37 ;end if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (7 -5) );v18=v18 + (5 -(2 + 1)) ;v36=953 -((1054 -252) + 150) ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (1190 -(1069 + 118)) );v18=v18 + (8 -4) ;return (v42 * (2916682 + 13860534)) + (v41 * (116444 -50908)) + (v40 * (580 -(1115 -(368 + 423)))) + v39 ;end local function v24() local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(19 -(10 + 8))) then v46=3 -2 ;v47=(v20(v45,1,462 -(416 + 26) ) * ((6 -(13 -9))^(14 + 18))) + v44 ;v43=(1750 -(760 + 987)) -1 ;end if ((438 -(145 + 293))==v43) then v44=v23();v45=v23();v43=431 -(44 + 386) ;end if (v43==(1488 -((2911 -(1789 + 124)) + 488))) then v48=v20(v45,(773 -(745 + 21)) + 14 ,26 + 5 );v49=((v20(v45,(277 + 527) -((552 -351) + 571) )==(1139 -(116 + 1022))) and  -(4 -3)) or (1 + (0 -0)) ;v43=10 -7 ;end if (v43==(10 -7)) then if (v48==((8 + 851) -(814 + 45))) then if (v47==(0 + 0)) then return v49 * (0 -0) ;else v48=1 + 0 ;v46=0 + 0 ;end elseif (v48==(2932 -(261 + 624))) then return ((v47==(0 -0)) and (v49 * ((1081 -(1020 + (1115 -(87 + 968))))/(1423 -(630 + 793))))) or (v49 * NaN) ;end return v8(v49,v48-(3466 -2443) ) * (v46 + (v47/(((39 -30) -7)^(21 + 31)))) ;end end end local function v25(v50) local v51;if  not v50 then local v93=1817 -(1703 + 114) ;while true do if (v93==(0 + 0)) then v50=v23();if (v50==((701 -(376 + 325)) -0)) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -(1414 -(447 + 966)) );v18=v18 + v50 ;local v52={};for v69=2 -1 , #v51 do v52[v69]=v2(v1(v3(v51,v69,v69)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101) local v94=(function() return 0;end)();local v95=(function() return;end)();local v97=(function() return;end)();while true do if (v94==(280 -(272 + 8))) then local v124=(function() return 0;end)();local v125=(function() return;end)();while true do if (v124~=(0 + 0)) then else v125=(function() return 1822 -(301 + 1521) ;end)();while true do if (v125==1) then v94=(function() return  #"[";end)();break;end if (v125~=0) then else v95=(function() return v96();end)();v97=(function() return nil;end)();v125=(function() return 1 -0 ;end)();end end break;end end end if (v94~= #"[") then else if (v95== #"{") then v97=(function() return v96()~=(0 + 0) ;end)();elseif (v95==(2 -0)) then v97=(function() return v98();end)();elseif (v95== #"nil") then v97=(function() return v99();end)();end v100[v101]=(function() return v97;end)();break;end end return v94,v95,v96,v97,v98,v99,v100,v101;end;end)();local v54=(function() return function(v102,v103,v104,v105,v106,v107,v108,v109,v110) local v111=(function() return 0 -0 ;end)();local v102=(function() return;end)();local v103=(function() return;end)();while true do local v119=(function() return 1700 -(1419 + 281) ;end)();while true do if (v119~=0) then else if (v111==(1 -0)) then local v130=(function() return 74 -(71 + 3) ;end)();while true do if (v130~=0) then else local v133=(function() return 0 + 0 ;end)();while true do if (v133~=0) then else while true do if (v102~=0) then else v103=(function() return v104();end)();if (v105(v103, #"}", #">")==0) then local v135=(function() return 0 -0 ;end)();local v136=(function() return;end)();local v137=(function() return;end)();local v138=(function() return;end)();while true do if (v135~=3) then else if (v105(v137, #"gha", #"91(")~= #"<") then else v138[ #".com"]=(function() return v108[v138[ #".com"]];end)();end v109[v110]=(function() return v138;end)();break;end if (v135~=(0 -0)) then else local v419=(function() return 0;end)();local v420=(function() return;end)();while true do if (v419~=(241 -(187 + 54))) then else v420=(function() return 0;end)();while true do if (v420==(780 -(162 + 618))) then local v502=(function() return 0;end)();while true do if ((0 + 0)==v502) then v136=(function() return v105(v103,2 + 0 , #"91(");end)();v137=(function() return v105(v103, #"asd1",6);end)();v502=(function() return 1 -0 ;end)();end if (v502~=1) then else v420=(function() return 1;end)();break;end end end if (v420~=(1 -0)) then else v135=(function() return 1;end)();break;end end break;end end end if (v135==(1 + 1)) then if (v105(v137, #"!", #"/")== #"\\") then v138[1638 -(1373 + 263) ]=(function() return v108[v138[1002 -(451 + 549) ]];end)();end if (v105(v137,1 + 1 ,2 -0 )== #".") then v138[ #"91("]=(function() return v108[v138[ #"-19"]];end)();end v135=(function() return 4 -1 ;end)();end if (v135~=1) then else v138=(function() return {v106(),v106(),nil,nil};end)();if (v136==(1384 -(746 + 638))) then local v481=(function() return 0 + 0 ;end)();local v482=(function() return;end)();while true do if (v481~=(0 -0)) then else v482=(function() return 0;end)();while true do if ((341 -(218 + 123))~=v482) then else v138[ #"gha"]=(function() return v106();end)();v138[ #"?id="]=(function() return v106();end)();break;end end break;end end elseif (v136== #"<") then v138[ #"gha"]=(function() return v107();end)();elseif (v136==(1583 -(1535 + 46))) then v138[ #"nil"]=(function() return v107() -(2^(16 + 0)) ;end)();elseif (v136== #"xnx") then local v508=(function() return 0 + 0 ;end)();while true do if (v508~=0) then else v138[ #"nil"]=(function() return v107() -((562 -(306 + 254))^16) ;end)();v138[ #".com"]=(function() return v106();end)();break;end end end v135=(function() return 1 + 1 ;end)();end end end break;end end return v102,v103,v104,v105,v106,v107,v108,v109,v110;end end end end end if (0==v111) then local v131=(function() return 0 -0 ;end)();while true do if (v131~=1) then else v111=(function() return 1468 -(899 + 568) ;end)();break;end if (v131==(0 + 0)) then v102=(function() return 0 -0 ;end)();v103=(function() return nil;end)();v131=(function() return 604 -(268 + 335) ;end)();end end end break;end end end end;end)();local v55=(function() return function(v112,v113,v114) local v115=(function() return 0;end)();local v116=(function() return;end)();while true do if ((290 -(60 + 230))==v115) then v116=(function() return 572 -(426 + 146) ;end)();while true do if (v116==0) then local v132=(function() return 0;end)();while true do if (v132==(0 + 0)) then v112[v113-#">" ]=(function() return v114();end)();return v112,v113,v114;end end end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v71= #".",v60 do FlatIdent_40CF,Type,v21,Cons,v24,v25,v61,v71=(function() return v53(FlatIdent_40CF,Type,v21,Cons,v24,v25,v61,v71);end)();end v59[ #"nil"]=(function() return v21();end)();for v72= #"\\",v23() do FlatIdent_79536,Descriptor,v21,v20,v22,v23,v61,v56,v72=(function() return v54(FlatIdent_79536,Descriptor,v21,v20,v22,v23,v61,v56,v72);end)();end for v73= #"/",v23() do v57,v73,v28=(function() return v55(v57,v73,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[1457 -(282 + 1174) ];local v67=v63[813 -(569 + 242) ];local v68=v63[656 -(232 + 421) ];return function(...) local v74=v66;local v75=v67;local v76=v68;local v77=v27;local v78=2 -1 ;local v79= -(1 + 0);local v80={};local v81={...};local v82=v12("#",...) -((2197 -945) -(721 + 530)) ;local v83={};local v84={};for v117=0 -0 ,v82 do if (v117>=v76) then v80[v117-v76 ]=v81[v117 + (1272 -(945 + 326)) ];else v84[v117]=v81[v117 + (2 -1) ];end end local v85=(v82-v76) + 1 + 0 ;local v86;local v87;while true do local v118=0 -0 ;while true do if (v118==(1 + 0 + 0)) then if (v87<=(60 + 4)) then if ((v87<=(731 -(271 + 429))) or (4461==3572)) then if (v87<=(23 -8)) then if (v87<=((1181 -(663 + 511)) + 0)) then if ((v87<=3) or (2872==318)) then if ((568==568) and (v87<=(1501 -(1408 + 92)))) then if (v87>((969 + 117) -(101 + 360 + 625))) then local v139=v86[901 -(503 + 396) ];do return v84[v139](v13(v84,v139 + (1289 -(993 + 295)) ,v79));end else local v140=0 + 0 ;local v141;while true do if ((4200==4200) and (v140==((3610 -2439) -(418 + 753)))) then v141=v86[1 + 1 ];v84[v141]=v84[v141](v84[v141 + 1 + 0 ]);break;end end end elseif (v87>(1 + 1)) then if v84[v86[2]] then v78=v78 + 1 + 0 ;else v78=v86[532 -(406 + 123) ];end elseif (v84[v86[1771 -(1749 + 20) ]]==v84[v86[1 + 3 ]]) then v78=v78 + 1 + 0 ;else v78=v86[6 -3 ];end elseif (v87<=((804 + 523) -(1249 + 73))) then if (v87>(2 + 2)) then if (v84[v86[1 + 1 ]]~=v84[v86[1149 -((1096 -630) + 679) ]]) then v78=v78 + (2 -1) ;else v78=v86[8 -5 ];end else local v142=v86[1902 -(106 + (4342 -2548)) ];local v143={v84[v142](v84[v142 + 1 + 0 ])};local v144=0 -0 ;for v320=v142,v86[10 -6 ] do v144=v144 + (115 -(4 + 110)) ;v84[v320]=v143[v144];end end elseif ((v87==(590 -(57 + 527))) or (4285<1369)) then local v145=(681 + 746) -(41 + 1386) ;local v146;while true do if ((v145==(1189 -(442 + 747))) or (3520>4910)) then v146=v86[(2212 -1075) -(832 + 303) ];v84[v146](v13(v84,v146 + (104 -(17 + 86)) ,v86[3 + 0 ]));break;end end else local v147=0 -0 ;local v148;local v149;local v150;local v151;while true do if (v147==(0 + 0 + 0)) then v148=v86[5 -3 ];v149,v150=v77(v84[v148](v84[v148 + 1 ]));v147=1 + 0 ;end if (v147==(168 -(122 + 44))) then for v455=v148,v79 do v151=v151 + (4 -3) ;v84[v455]=v149[v151];end break;end if ((1 -(0 + 0))==v147) then v79=(v150 + v148) -(3 -2) ;v151=0 + 0 ;v147=1 + 1 ;end end end elseif (v87<=((743 -(478 + 244)) -10)) then if (v87<=((591 -(440 + 77)) -(30 + 35))) then if (v87==(6 + 2)) then local v152=v86[1259 -(1043 + 214) ];v79=(v152 + v85) -(3 -2) ;for v323=v152,v79 do local v324=v80[v323-v152 ];v84[v323]=v324;end else v84[v86[1214 -(323 + 889) ]]=v84[v86[7 -4 ]];end elseif ((2842<=4353) and (v87>(1694 -(1466 + 218)))) then v84[v86[1 + 1 ]]=v84[v86[583 -(361 + 219) ]] + v86[1152 -(556 + 592) ] ;else do return v84[v86[322 -(53 + 267) ]]();end end elseif (v87<=13) then if (v87>(3 + 9)) then v65[v86[416 -(15 + 398) ]]=v84[v86[984 -(18 + 439 + 525) ]];else v84[v86[7 -5 ]]();end elseif (v87>(9 + 5)) then local v158=v86[2 + 0 ];v84[v158](v84[v158 + (3 -2) ]);else local v159=850 -(20 + 830) ;local v160;local v161;while true do if (v159==(0 + 0)) then v160=v86[128 -(116 + 10) ];v161=v84[v160];v159=740 -(396 + 343) ;end if ((v159==(1 + 0)) or (3751<1643)) then for v458=v160 + (739 -(542 + (717 -521))) ,v86[(1557 -(655 + 901)) + 2 ] do v7(v161,v84[v458]);end break;end end end elseif ((v87<=(49 -26)) or (4911==3534)) then if (v87<=(6 + 13)) then if (v87<=(2 + 7 + 8)) then if (v87>(6 + 10)) then local v162=v86[2 + 0 ];local v163=v84[v162];local v164=v86[3 + 0 ];for v326=2 -1 ,v164 do v163[v326]=v84[v162 + v326 ];end else v84[v86[4 -2 ]]=v84[v86[1554 -(1126 + 425) ]] + v86[(277 + 132) -(118 + 287) ] ;end elseif (v87==(70 -52)) then local v166=v86[2 + 0 ];v84[v166]=v84[v166](v84[v166 + (1122 -(118 + 1003)) ]);else v84[v86[5 -3 ]]=v86[380 -(142 + 235) ]^v84[v86[18 -14 ]] ;end elseif (v87<=(5 + 16)) then if (v87>(997 -(553 + 424))) then v84[v86[4 -(7 -5) ]]=v86[(1450 -(695 + 750)) -2 ]~=(0 -0) ;else v84[v86[1 + 1 ]]=v84[v86[3]];end elseif (v87==(20 + 2)) then if ((3001>16) and (v86[2 + 0 ]<v84[v86[3 + 1 ]])) then v78=v78 + 1 ;else v78=v86[1 + 2 ];end else v84[v86[1 + 1 ]][v84[v86[2 + (3 -2) ]]]=v84[v86[8 -(6 -2) ]];end elseif ((2875<=3255) and (v87<=(75 -48))) then if (v87<=(329 -(300 + 4))) then if (v87==(53 -29)) then v84[v86[1 + 1 ]]();elseif (v84[v86[9 -(28 -21) ]]<v84[v86[757 -(239 + 514) ]]) then v78=v78 + 1 + 0 ;else v78=v86[1332 -(797 + 532) ];end elseif ((368<4254) and (v87>(65 -39))) then v84[v86[2 + 0 ]]=v84[v86[2 + 1 ]] * v86[4] ;else local v175=0 + 0 ;local v176;while true do if (v175==(0 -0)) then v176=v84[v86[355 -(285 + 66) ]];if  not v176 then v78=v78 + (1203 -(373 + (1932 -1103))) ;else local v483=731 -((1786 -(682 + 628)) + 255) ;while true do if ((1130 -(369 + 761))==v483) then v84[v86[2 + 0 ]]=v176;v78=v86[5 -2 ];break;end end end break;end end end elseif ((v87<=(54 -25)) or (4841<=2203)) then if (v87>(266 -(64 + 174))) then local v177=v86[1 + 1 ];local v178=v86[5 -(1 + 0) ];local v179=v177 + (338 -(144 + 192)) ;local v180={v84[v177](v84[v177 + 1 + 0 ],v84[v179])};for v329=1 + 0 + 0 ,v178 do v84[v179 + v329 ]=v180[v329];end local v181=v180[1 + 0 ];if v181 then v84[v179]=v181;v78=v86[1507 -(363 + 828 + 313) ];else v78=v78 + (2 -1) ;end else v84[v86[1582 -(1183 + 397) ]]=v84[v86[8 -5 ]][v84[v86[3 + 1 ]]];end elseif (v87>(23 + 7)) then local v184=1975 -((2182 -(239 + 30)) + 17 + 45) ;local v185;while true do if ((4661>616) and ((0 + 0)==v184)) then v185=v84[v86[10 -6 ]];if  not v185 then v78=v78 + (1934 -(565 + 1368)) ;else local v484=0 -0 ;while true do if (v484==(1661 -(1477 + 184))) then v84[v86[2 -0 ]]=v185;v78=v86[3 + 0 ];break;end end end break;end end else v84[v86[1 + 1 ]]=v84[v86[3 + 0 ]][v86[225 -(55 + 166) ]];end elseif (v87<=(903 -(564 + 292))) then if ((v87<=(4 + 35)) or (1943==2712)) then if ((4219>=39) and (v87<=(59 -24))) then if (v87<=(99 -66)) then if (v87>(336 -(244 + 60))) then v84[v86[2 + 0 + 0 ]]=v84[v86[479 -((72 -31) + 435) ]] * v86[2 + (5 -3) ] ;else local v189=v86[1003 -(938 + 63) ];v84[v189]=v84[v189](v13(v84,v189 + (316 -(306 + 9)) + 0 ,v86[3 + 0 ]));end elseif (v87==(1159 -(936 + 189))) then v84[v86[2]]={};else local v192=v86[1 + 1 ];do return v13(v84,v192,v79);end end elseif (v87<=(58 -(20 + 1))) then if ((3967>2289) and (v87==(1649 -(1565 + 48)))) then if (v86[2 + 0 ]==v84[v86[1142 -(782 + 356) ]]) then v78=v78 + (686 -(314 + 371)) ;else v78=v86[(942 -672) -(31 + 145 + 91) ];end else local v193=(594 + 374) -(478 + 490) ;local v194;while true do if ((v193==(0 -(0 + 0))) or (851>2987)) then v194=v86[2 -0 ];v84[v194](v13(v84,v194 + ((3125 -2032) -(975 + 117)) ,v79));break;end end end elseif ((4893>=135) and (v87>(1913 -(157 + 1718)))) then v84[v86[2 + (1375 -(1140 + 235)) ]]=v29(v75[v86[10 -7 ]],nil,v65);elseif (v86[6 -4 ]<=v84[v86[1022 -(697 + 321) ]]) then v78=v78 + (2 -1) ;else v78=v86[5 -2 ];end elseif (v87<=(98 -55)) then if (v87<=(16 + 25)) then if ((v87>(74 -34)) or (3084>3214)) then v84[v86[5 -3 ]]=v84[v86[1230 -(322 + 905) ]] * v84[v86[615 -(602 + 9) ]] ;else for v332=v86[6 -4 ],v86[1192 -(449 + 740) ] do v84[v332]=nil;end end elseif ((v87==(32 + 10)) or (3426<2647)) then local v197=v86[875 -(826 + 46) ];local v198=v84[v197];for v334=v197 + (948 -(156 + 89 + 702)) ,v86[10 -6 ] do v198=v198   .. v84[v334] ;end v84[v86[6 -4 ]]=v198;else v84[v86[1 + 1 ]]=v86[12 -9 ]^v84[v86[5 -1 ]] ;end elseif ((v87<=(1943 -(260 + 1638))) or (1576==4375)) then if (v87>(484 -(382 + 58))) then if ((v84[v86[6 -4 ]]<v84[v86[4 + 0 ]]) or (2920<2592)) then v78=v86[3 + 0 ];else v78=v78 + (1087 -(686 + 400)) ;end else local v201=0 -0 ;local v202;while true do if (v201==0) then v202=v86[5 -(3 + 0) ];v84[v202]=v84[v202]();break;end end end elseif (v87>(1251 -(232 + 670 + 303))) then do return;end elseif ((v84[v86[3 -1 ]]<v84[v86[9 -5 ]]) or (1110>=2819)) then v78=v86[1 + (54 -(33 + 19)) ];else v78=v78 + (1691 -(1121 + 206 + 363)) ;end elseif (v87<=(269 -(22 + 192))) then if (v87<=(734 -(483 + 200))) then if (v87<=(519 -(224 + 246))) then if ((1824<=2843) and (v87>(1511 -(1404 + (176 -117))))) then if (v86[(2 + 1) -1 ]==v84[v86[10 -6 ]]) then v78=v78 + (1 -0) ;else v78=v86[768 -(468 + 297) ];end else local v203=562 -(334 + 228) ;local v204;while true do if ((0 -0)==v203) then v204=v86[4 -2 ];v84[v204](v13(v84,v204 + (1 -0) ,v79));break;end end end elseif (v87==(15 + 35)) then v84[v86[238 -(141 + 95) ]][v86[3 + (0 -0) ]]=v84[v86[1 + 3 ]];else v84[v86[4 -2 ]][v86[1537 -(709 + 825) ]]=v86[9 -5 ];end elseif (v87<=53) then if (v87==(75 -23)) then v84[v86[866 -(196 + 668) ]][v86[1 + 2 ]]=v84[v86[7 -(3 + 0) ]];else v84[v86[5 -3 ]]=v86[3 + 0 ];end elseif (v87==(29 + 25)) then v84[v86[2 -0 ]]=v65[v86[2 + 1 ]];else local v215=0;local v216;while true do if ((163 -(92 + 71))==v215) then v216=v86[1 + 1 ];do return v84[v216](v13(v84,v216 + 1 + 0 ,v86[(702 -(586 + 103)) -10 ]));end break;end end end elseif (v87<=((9 + 89) -39)) then if (v87<=(822 -(574 + (587 -396)))) then if (v87==(1509 -((1516 -(1309 + 179)) + 1425))) then v84[v86[2 + 0 ]]=v84[v86[1996 -(941 + 1052) ]][v86[9 -5 ]];else local v219=0 + 0 ;local v220;while true do if (v219==(849 -(254 + (1074 -479)))) then v220=v86[1 + 1 ];do return v84[v220](v13(v84,v220 + (127 -(55 + 71)) ,v79));end break;end end end elseif (v87>(76 -18)) then if (v86[1792 -(573 + 1217) ]<=v84[v86[(5 + 5) -6 ]]) then v78=v78 + 1 + (0 -0) ;else v78=v86[4 -1 ];end else local v221=v86[941 -(714 + 225) ];v79=(v221 + v85) -(2 -1) ;for v335=v221,v79 do local v336=v80[v335-v221 ];v84[v335]=v336;end end elseif (v87<=(84 -23)) then if (v87==(7 + 53)) then v84[v86[(2 + 0) -0 ]][v84[v86[809 -(118 + 688) ]]]=v84[v86[(110 -58) -(25 + 23) ]];else local v224=v86[(1 -0) + 1 ];v84[v224]=v84[v224](v13(v84,v224 + (1887 -(927 + 959)) ,v86[10 -7 ]));end elseif (v87<=(794 -(16 + 716))) then if (v86[3 -1 ]<v84[v86[101 -(11 + 86) ]]) then v78=v78 + (2 -1) ;else v78=v86[288 -(175 + 110) ];end elseif (v87>((767 -(295 + 314)) -95)) then local v389=1230 -(957 + 273) ;local v390;while true do if ((3062==3062) and (v389==((0 -0) + 0))) then v390=v86[1 + 1 ];do return v84[v390](v13(v84,v390 + (3 -2) ,v86[14 -11 ]));end break;end end else v64[v86[1799 -(503 + 1293) ]]=v84[v86[5 -(1965 -(1300 + 662)) ]];end elseif (v87<=(293 -197)) then if (v87<=((1243 -847) -316)) then if ((716<=4334) and (v87<=(53 + 19))) then if ((1001<3034) and (v87<=(1848 -(389 + 1391)))) then if (v87<=(1127 -(810 + 251))) then if (v87==(46 + 19)) then if  not v84[v86[1 + 1 ]] then v78=v78 + ((2707 -(1178 + 577)) -(783 + 168)) ;else v78=v86[9 -6 ];end else do return;end end elseif (v87>(61 + 6)) then if (v84[v86[2]]~=v86[537 -(43 + 490) ]) then v78=v78 + (734 -(711 + 12 + 10)) ;else v78=v86[(32 -21) -(1413 -(851 + 554)) ];end else v84[v86[1214 -(1090 + 122) ]]=v84[v86[862 -(240 + 619) ]]/v86[4] ;end elseif (v87<=(17 + 53)) then if (v87==69) then local v227=v86[2 -0 ];local v228={v84[v227](v13(v84,v227 + (1745 -(1344 + 400)) ,v79))};local v229=(359 + 46) -(255 + 150) ;for v338=v227,v86[1 + 3 ] do v229=v229 + 1 + 0 ;v84[v338]=v228[v229];end else v84[v86[9 -7 ]]=v86[777 -(431 + 343) ]~=(0 + 0) ;v78=v78 + ((10 -6) -3) ;end elseif (v87==71) then if  not v84[v86[6 -(8 -4) ]] then v78=v78 + ((2042 -(115 + 187)) -(404 + 1335)) ;else v78=v86[409 -(183 + 223) ];end else local v231=0 -0 ;local v232;local v233;while true do if (((1 + 0)==v231) or (977>1857)) then v84[v232 + 1 + 0 ]=v233;v84[v232]=v233[v86[341 -(10 + 327) ]];break;end if (v231==(0 + 0)) then v232=v86[340 -(118 + 220) ];v233=v84[v86[1 + 2 ]];v231=1 -0 ;end end end elseif (v87<=(525 -(108 + 341))) then if (v87<=(34 + 40)) then if (v87>(308 -235)) then local v234=v86[1495 -(711 + 599 + 183) ];local v235={v84[v234](v13(v84,v234 + (1 -0) ,v86[472 -(270 + 199) ]))};local v236=0 + 0 ;for v341=v234,v86[1267 -(668 + 595) ] do local v342=1819 -(580 + 1239) ;while true do if (v342==(0 -0)) then v236=v236 + 1 + 0 ;v84[v341]=v235[v236];break;end end end else v84[v86[292 -((90 -67) + (1428 -(160 + 1001))) ]]=v84[v86[1 + 2 ]] + v84[v86[2 + 2 ]] ;end elseif (v87>((171 + 24) -120)) then v64[v86[2 + 1 ]]=v84[v86[1169 -(645 + 361 + 161) ]];else v84[v86[1792 -(1010 + 780) ]]=v84[v86[3 + 0 ]] * v84[v86[19 -15 ]] ;end elseif (v87<=((466 -238) -150)) then if (v87==(1853 -(421 + 1355))) then local v241=v75[v86[1839 -(1045 + 791) ]];local v242;local v243={};v242=v10({},{__index=function(v343,v344) local v345=v243[v344];return v345[2 -1 ][v345[2 -0 ]];end,__newindex=function(v346,v347,v348) local v349=v243[v347];v349[3 -2 ][v349[507 -(351 + 154) ]]=v348;end});for v351=3 -2 ,v86[1578 -(1281 + 293) ] do v78=v78 + ((409 -(96 + 46)) -(28 + 238)) ;local v352=v74[v78];if (v352[2 -1 ]==9) then v243[v351-((2337 -(643 + 134)) -(1381 + 178)) ]={v84,v352[3 + 0 ]};else v243[v351-(1 -0) ]={v64,v352[10 -7 ]};end v83[ #v83 + 1 + 0 ]=v243;end v84[v86[2 + 0 ]]=v29(v241,v242,v65);elseif (v84[v86[472 -((913 -532) + 89) ]]==v86[4 + 0 ]) then v78=v78 + 1 + 0 ;else v78=v86[3 + 0 ];end elseif (v87==((497 -363) -55)) then local v245=1156 -(1074 + 82) ;local v246;local v247;local v248;local v249;while true do if (v245==(1 -0)) then v79=(v248 + v246) -(1 + 0) ;v249=1784 -(214 + 1570) ;v245=1457 -(990 + 446 + 19) ;end if ((v245==(573 -(47 + 524))) or (868>897)) then for v461=v246,v79 do v249=v249 + 1 ;v84[v461]=v247[v249];end break;end if (v245==0) then v246=v86[1 + 1 ];v247,v248=v77(v84[v246](v84[v246 + 1 + 0 ]));v245=1 + 0 ;end end else v84[v86[7 -5 ]]={};end elseif ((v87<=88) or (1115==4717)) then if (v87<=(1810 -((3273 -1605) + 58))) then if ((2740<4107) and (v87<=(3 + 79))) then if ((284<700) and (v87==81)) then v84[v86[628 -((1046 -534) + 114) ]]=v29(v75[v86[9 -6 ]],nil,v65);elseif ((386>=137) and (v86[5 -3 ]<v84[v86[8 -4 ]])) then v78=v86[10 -7 ];else v78=v78 + 1 + 0 ;end elseif ((923==923) and (v87==(16 + 67))) then if ((v84[v86[6 -4 ]]<=v84[v86[4 + 0 ]]) or (4173==359)) then v78=v78 + (3 -(721 -(316 + 403))) ;else v78=v86[884 -(581 + 300) ];end else local v252=v86[1996 -(109 + 1885) ];local v253=v86[1473 -(844 + 425 + 200) ];local v254=v252 + (4 -(5 -3)) ;local v255={v84[v252](v84[v252 + (1236 -(1030 + 205)) ],v84[v254])};for v354=1 + 0 ,v253 do v84[v254 + v354 ]=v255[v354];end local v256=v255[1];if v256 then v84[v254]=v256;v78=v86[818 -(98 + 717) ];else v78=v78 + (827 -((2019 -1217) + 24)) ;end end elseif ((1722==1722) and (v87<=(147 -61))) then if (v87>((76 + 31) -22)) then v84[v86[1 + 1 ]]=v86[3 + 0 ];else v84[v86[1 + 1 ]]=v84[v86[1 + 2 ]] + v84[v86[1 + 3 ]] ;end elseif ((v87>(241 -(533 -379))) or (3994<=3820)) then local v260=(0 -0) -0 ;local v261;local v262;local v263;while true do if ((1488<1641) and (v260==(0 + 0))) then v261=v86[(1 -0) + 1 ];v262={v84[v261](v13(v84,v261 + 1 + 0 ,v79))};v260=1 + 0 ;end if (v260==((67 + 1097) -(671 + 492))) then v263=0 + 0 ;for v464=v261,v86[(2828 -1391) -(797 + 636) ] do local v465=(0 + 0) -0 ;while true do if (v465==(1619 -(1427 + 192))) then v263=v263 + 1 + 0 ;v84[v464]=v262[v263];break;end end end break;end end else local v264=0 + 0 ;local v265;local v266;while true do if ((433<=2235) and (v264==(0 -0))) then v265=v86[205 -(11 + 192) ];v266={};v264=1 + 0 ;end if ((v264==(1 + 0)) or (1838>2471)) then for v466=(962 -635) -((209 -(12 + 5)) + 134) , #v83 do local v467=0 -0 ;local v468;while true do if (v467==(1276 -(316 + 960))) then v468=v83[v466];for v497=0 + 0 , #v468 do local v498=0 -0 ;local v499;local v500;local v501;while true do if (v498==(0 + (0 -0))) then v499=v468[v497];v500=v499[177 -(50 + 126) ];v498=1 + 0 ;end if (v498==(3 -2)) then v501=v499[553 -(83 + 468) ];if ((v500==v84) and (v501>=v265)) then v266[v501]=v500[v501];v499[1807 -((2564 -1362) + 604) ]=v266;end break;end end end break;end end end break;end end end elseif (v87<=(429 -337)) then if ((2444<3313) and (v87<=(149 -59))) then if (v87>(246 -157)) then local v267=v86[327 -(45 + 280) ];v84[v267]=v84[v267](v13(v84,v267 + 1 + 0 ,v79));else v84[v86[(3 -1) + 0 ]]= #v84[v86[2 + 1 ]];end elseif (v87>(51 + 40)) then do return v84[v86[1 + 1 ]];end else v84[v86[3 -1 ]]=v86[1914 -(340 + 1571) ]~=((0 -0) + 0) ;v78=v78 + (1773 -(1733 + 8 + 31)) ;end elseif ((v87<=(258 -(2137 -(1656 + 317)))) or (3685<=185)) then if (v87>(1127 -(125 + 811 + 98))) then local v271=0;local v272;while true do if (v271==((1562 + 386) -(1096 + 852))) then v272=v86[1 + 1 ];do return v13(v84,v272,v272 + v86[3] );end break;end end else for v357=v86[(4 -2) -0 ],v86[8 -5 ] do v84[v357]=nil;end end elseif ((738<=1959) and (v87>(93 + 2))) then local v273=433 -(279 + (757 -603)) ;local v274;while true do if (v273==(778 -(454 + 324))) then v274=v86[514 -(409 + 103) ];v84[v274]=v84[v274]();break;end end else v65[v86[3]]=v84[v86[238 -(46 + 190) ]];end elseif ((v87<=((561 -(5 + 349)) -((242 -191) + 44))) or (1317==3093)) then if (v87<=(30 + 74)) then if (v87<=(1417 -(1114 + 203))) then if ((v87<=((2095 -(266 + 1005)) -(228 + 498))) or (2611>=4435)) then if ((v87==(22 + 75)) or (117>4925)) then v84[v86[2 + 0 ]]=v84[v86[12 -9 ]] -v84[v86[667 -(174 + 489) ]] ;elseif ((107<=4905) and (v84[v86[1 + 1 + 0 ]]<=v84[v86[10 -6 ]])) then v78=v78 + ((3330 -2354) -(815 + 160)) ;else v78=v86[1908 -(830 + (1415 -340)) ];end elseif (v87>(623 -((1999 -(561 + 1135)) + 221))) then if (v84[v86[1271 -(231 + 1038) ]]<v84[v86[4 + 0 ]]) then v78=v78 + (1899 -(41 + 1857)) ;else v78=v86[1896 -(1222 + 671) ];end elseif (v84[v86[2]]==v84[v86[10 -6 ]]) then v78=v78 + (1 -0) ;else v78=v86[1165 -(171 + 991) ];end elseif (v87<=(420 -318)) then if (v87==(271 -(221 -51))) then v84[v86[4 -2 ]]=v84[v86[3 + 0 ]] -v84[v86[13 -9 ]] ;elseif ((v86[2]<v84[v86[1 + 3 ]]) or (1004>4035)) then v78=v86[8 -5 ];else v78=v78 + (1 -(0 -0)) ;end elseif (v87>(318 -215)) then v84[v86[4 -2 ]]=v64[v86[457 -(233 + 221) ]];elseif (v84[v86[1250 -((1177 -(507 + 559)) + 1137) ]] or (2802<369)) then v78=v78 + (159 -(91 + 67)) ;else v78=v86[8 -5 ];end elseif ((1497<=2561) and (v87<=(27 + (203 -122)))) then if (v87<=(629 -((1308 -885) + 100))) then if (v87==105) then if (v84[v86[1 + (389 -(212 + 176)) ]]~=v84[v86[10 -6 ]]) then v78=v78 + 1 + 0 ;else v78=v86[1228 -(636 + 589) ];end else local v281=v86[773 -(326 + 445) ];v84[v281]=v84[v281](v13(v84,v281 + 1 ,v79));end elseif ((v87==107) or (816>1712)) then v84[v86[8 -6 ]]=v84[v86[3]][v84[v86[8 -4 ]]];else v84[v86[4 -2 ]]=v65[v86[714 -((1435 -(250 + 655)) + 181) ]];end elseif ((v87<=(991 -(614 + 267))) or (2733==2971)) then if ((2599<4050) and (v87>((384 -243) -(19 + 13)))) then local v287=v86[(2077 -888) -(1151 + 36) ];local v288=v84[v86[4 -1 ]];v84[v287 + (2 -1) ]=v288;v84[v287]=v288[v86[11 -7 ]];else local v292=0 + (0 -0) ;local v293;while true do if ((2034==2034) and (v292==(0 -0))) then v293=v86[3 -1 ];v84[v293](v13(v84,v293 + 1 + 0 ,v86[1815 -(1293 + 519) ]));break;end end end elseif ((3040<4528) and (v87>(226 -115))) then v84[v86[4 -2 ]]=v64[v86[5 -2 ]];else local v296=v86[8 -6 ];local v297=v84[v296];local v298=v86[6 -3 ];for v359=1 + 0 ,v298 do v297[v359]=v84[v296 + v359 ];end end elseif (v87<=(525 -405)) then if ((v87<=(24 + 92)) or (2092<=2053)) then if (v87<=(155 -41)) then if (v87>(261 -148)) then local v299=v86[3 -1 ];do return v13(v84,v299,v79);end else local v300=v86[1 + (1957 -(1869 + 87)) ];local v301={};for v362=1932 -(1813 + 118) , #v83 do local v363=v83[v362];for v407=0 + 0 , #v363 do local v408=v363[v407];local v409=v408[1];local v410=v408[1219 -(841 + 376) ];if ((v409==v84) and (v410>=v300)) then v301[v410]=v409[v410];v408[1 -(0 -0) ]=v301;end end end end elseif (v87>(72 + 43)) then if (v84[v86[1098 -(709 + 387) ]]==v86[1862 -(673 + 1185) ]) then v78=v78 + (2 -1) ;else v78=v86[9 -6 ];end elseif (v84[v86[2 -0 ]]~=v86[(1904 -(484 + 1417)) + 1 ]) then v78=v78 + 1 + (0 -0) ;else v78=v86[(4 -1) -0 ];end elseif (v87<=((802 -(48 + 725)) + 89)) then if (v87==117) then v84[v86[3 -1 ]]=v84[v86[10 -(11 -4) ]]/v86[7 -3 ] ;else v84[v86[1882 -(446 + 1434) ]]= #v84[v86[1286 -(1040 + 243) ]];end elseif (v87>(355 -236)) then v84[v86[1849 -(559 + 1288) ]][v86[1934 -((1633 -1024) + 769 + 553) ]]=v86[458 -(13 + 441) ];else local v306=0 -0 ;local v307;local v308;while true do if ((2120<4799) and (v306==(0 -0))) then v307=v86[14 -11 ];v308=v84[v307];v306=1;end if (v306==((2 -1) + 0)) then for v472=v307 + 1 ,v86[14 -10 ] do v308=v308   .. v84[v472] ;end v84[v86[1 + 1 ]]=v308;break;end end end elseif (v87<=(55 + 20 + 49)) then if (v87<=(357 -235)) then if (v87>(359 -238)) then v78=v86[2 + 1 + 0 ];else do return v84[v86[3 -1 ]]();end end elseif (v87==(82 + 41)) then do return v84[v86[2 + 0 ]];end else v84[v86[2 + (853 -(152 + 701)) ]]=v86[3 + 0 ]~=(1311 -(430 + 881)) ;end elseif (v87<=(106 + 20)) then if ((v87==(1026 -(652 + 249))) or (4538<=389)) then local v311=0 + 0 ;local v312;local v313;local v314;while true do if (v311==(433 -(153 + 280))) then v312=v86[5 -3 ];v313={v84[v312](v84[v312 + 1 + 0 ])};v311=1 + 0 ;end if ((270<=1590) and (v311==(1 + 0))) then v314=27 -(10 + 17) ;for v473=v312,v86[3 + 1 ] do v314=v314 + (1 -0) ;v84[v473]=v313[v314];end break;end end else v78=v86[(897 -(557 + 338)) + 1 ];end elseif (v87<=127) then local v316=v75[v86[670 -(89 + 578) ]];local v317;local v318={};v317=v10({},{__index=function(v364,v365) local v366=v318[v365];return v366[1 + 0 ][v366[3 -1 ]];end,__newindex=function(v367,v368,v369) local v370=0 -0 ;local v371;while true do if ((1625>1265) and ((1049 -(572 + 477))==v370)) then v371=v318[v368];v371[1 + 0 ][v371[2 + 0 ]]=v369;break;end end end});for v372=1 + 0 ,v86[1 + 3 ] do v78=v78 + (87 -(84 + 2)) ;local v373=v74[v78];if (v373[1 -0 ]==(7 + 2)) then v318[v372-((250 + 593) -(497 + 345)) ]={v84,v373[1336 -(605 + 728) ]};else v318[v372-(2 -1) ]={v64,v373[5 -2 ]};end v83[ #v83 + (1 -0) ]=v318;end v84[v86[1 + 1 ]]=v29(v316,v317,v65);elseif ((v87>((983 -613) -(6 + 236))) or (51>=920)) then local v413=v86[1 + 1 ];v84[v413](v84[v413 + (3 -2) ]);else local v414=0 + 0 ;local v415;local v416;local v417;while true do if (v414==((4 -2) -1)) then v417=0 + 0 ;for v487=v415,v86[6 -2 ] do local v488=489 -(457 + 32) ;while true do if (v488==(0 + 0)) then v417=v417 + 1 ;v84[v487]=v416[v417];break;end end end break;end if (v414==(1402 -(832 + 570))) then v415=v86[2 + 0 ];v416={v84[v415](v13(v84,v415 + 1 + 0 ,v86[3 + 0 ]))};v414=3 -2 ;end end end v78=v78 + 1 + 0 ;break;end if ((v118==(796 -((1622 -1034) + 208))) or (2968<=1998)) then v86=v74[v78];v87=v86[2 -(2 -1) ];v118=1801 -(884 + 916) ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);